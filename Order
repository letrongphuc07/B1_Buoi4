package b1_buoi3;

import java.time.LocalDate;
import java.util.ArrayList;
import java.util.List;

public class Order {
    private static int currentOrderID = 1;
    private static Order currentOrder;
    private int orderID;
    private LocalDate orderDate;
    private List<OrderDetail> lineItems;
    private int count=0;
    
    public Order(){}

    public Order(int orderID, LocalDate orderDate, int count) {
        this.orderID = orderID;
        this.orderDate = orderDate;
        this.count = count;
    }
    
    
    public Order(int orderID, LocalDate orderDate, List<OrderDetail> lineItems, int count) {
        this.orderID = orderID;
        this.orderDate = orderDate;
        this.lineItems = lineItems;
        this.count = count;
    }

    public Order(LocalDate orderDate) {
        if(currentOrder==null){
            currentOrder=this;
            this.orderID = currentOrderID++;
            this.orderDate= orderDate;
            this.count=++count;
            this.lineItems = new ArrayList<>();
        }else{
            this.orderID=currentOrder.getOrderID();
            this.orderDate= orderDate;
            this.count= currentOrder.getCount();
            this.lineItems= currentOrder.getLineItems();
        }
    }
    public static int getCurrenOrderID(){
        return currentOrderID;
    }

    public int getOrderID() {
        return orderID;
    }

    public void setOrderID(int orderID) {
        this.orderID = orderID;
    }

    public LocalDate getOrderDate() {
        return orderDate;
    }

    public void setOrderDate(LocalDate orderDate) {
        this.orderDate = orderDate;
    }

    public List<OrderDetail> getLineItems() {
        return lineItems;
    }

    public void setLineItems(List<OrderDetail> lineItems) {
        this.lineItems = lineItems;
    }

    public int getCount() {
        return count;
    }

    public void setCount(int count) {
        this.count = count;
    }
    
    public void addLineItem(Product p, int quantity){
        if(currentOrder==null){
            currentOrder=new Order( LocalDate.now());
        }
        lineItems.add(new OrderDetail(quantity, p));
    }
    public double calcTotalCharge(){
        double totalCharge=0;
        for(OrderDetail s : lineItems){
            totalCharge += s.calcTotalPrice();
        }
        return totalCharge;
    }

    @Override
    public String toString() {
        StringBuilder b = new StringBuilder();
        b.append("Ma Order: ").append(orderID).append("Ngay mua: ").append("\n");
        b.append(String.format("| %-15s | %-25s | %15s | %-20s | %-20s | %-10s |%n", "STT", "Ma SP", "Mo Ta", "Don Gia", "So Luong", "Thanh Tien"));
        
        for(int i=0; i<lineItems.size();i++){
            OrderDetail orderDetail= lineItems.get(i);
            Product product = orderDetail.getProduct();
            b.append(String.format("| %-15s | %-25s | %15s | %-20s | %-20s | %-10s |%n",
                    i+1, product.getProductID(),product.getDescription(),product.getPrice(), orderDetail.getQuantity(), orderDetail.calcTotalPrice()));
                    }
        b.append("Tong thanh toan: ").append(calcTotalCharge());
        return b.toString();
    }
    
}
